[{"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\index.js":"1","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\App.js":"2","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\reportWebVitals.js":"3","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\StandUpPage.js":"4","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\HomePage\\HomePage.js":"5","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\RetroPage.js":"6","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\UserPage\\UserPage.js":"7","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\horizontal-navs\\HorizontalNav4.js":"8","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final aProject\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\02_Setup\\02_Setup.js":"9","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\01_Instructions\\01_Instructions.js":"10","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\03_RandomizerAndTimer\\03_RandomizerAndTimer.js":"11","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\04_MeetingFinished\\04_MeetingFinished.js":"12","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\ProductTitle\\ProductTitle.js":"13","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\features\\Features4.js":"14","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\team\\Team2.js":"15","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\gallery\\Gallery2.js":"16","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\footers\\Footer3.js":"17","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\UserDashboard\\UserDashboard.js":"18","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\01_Instructions\\01_InstructionsRetro.js":"19","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\02_PickRole\\02_PickRole.js":"20","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\03_Setup\\03_SetupFacilitator.js":"21","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\03_Setup\\03_SetupParticipant.js":"22","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\04_MeetingInProgress.js":"23","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\05_FinishedMeeting\\05_FinishedMeeting.js":"24","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\StatsGraph\\StatsGraph.js":"25","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingStats\\MeetingStats.js":"26","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\Login\\LogInButton\\LogInButton.js":"27","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\Login\\LogOutButton\\LogOutButton.js":"28","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingStats\\Acordion.js":"29","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TextField\\Text.js":"30","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\RetroColumn\\RetroColumn.js":"31","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingParticipants\\ParticipantCard\\ParticipantCard.js":"32","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TotalStandups\\TotalStandups.js":"33","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TotalRetros\\TotalRetros.js":"34","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\FastestMeeting\\FastestMeeting.js":"35","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\RetroCard\\RetroCard.js":"36","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TimerPartyParrot\\TimerPartyParrot.js":"37","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\RandomizerCard\\RandomizerCard.js":"38"},{"size":1131,"mtime":1610706899650,"results":"39","hashOfConfig":"40"},{"size":1250,"mtime":1610706899604,"results":"41","hashOfConfig":"40"},{"size":375,"mtime":1609325946750,"results":"42","hashOfConfig":"40"},{"size":6871,"mtime":1610360564888,"results":"43","hashOfConfig":"40"},{"size":4090,"mtime":1610706899651,"results":"44","hashOfConfig":"40"},{"size":6168,"mtime":1610467180694,"results":"45","hashOfConfig":"40"},{"size":2382,"mtime":1610706899664,"results":"46","hashOfConfig":"40"},{"size":5157,"mtime":1610444098352,"results":"47","hashOfConfig":"40"},{"size":7354,"mtime":1610706899660,"results":"48","hashOfConfig":"40"},{"size":2532,"mtime":1610463640403,"results":"49","hashOfConfig":"40"},{"size":3806,"mtime":1610360564886,"results":"50","hashOfConfig":"40"},{"size":7524,"mtime":1610706899661,"results":"51","hashOfConfig":"40"},{"size":422,"mtime":1610360564848,"results":"52","hashOfConfig":"40"},{"size":4052,"mtime":1609325946733,"results":"53","hashOfConfig":"40"},{"size":5149,"mtime":1610360564877,"results":"54","hashOfConfig":"40"},{"size":1991,"mtime":1609325946735,"results":"55","hashOfConfig":"40"},{"size":3068,"mtime":1610360564873,"results":"56","hashOfConfig":"40"},{"size":1819,"mtime":1610710818657,"results":"57","hashOfConfig":"40"},{"size":5697,"mtime":1610706899652,"results":"58","hashOfConfig":"40"},{"size":1383,"mtime":1610706899654,"results":"59","hashOfConfig":"40"},{"size":6040,"mtime":1610706899656,"results":"60","hashOfConfig":"40"},{"size":713,"mtime":1610463640393,"results":"61","hashOfConfig":"40"},{"size":4412,"mtime":1610706899657,"results":"62","hashOfConfig":"40"},{"size":123,"mtime":1610463640401,"results":"63","hashOfConfig":"40"},{"size":4862,"mtime":1610710818654,"results":"64","hashOfConfig":"40"},{"size":3724,"mtime":1610710962554,"results":"65","hashOfConfig":"40"},{"size":339,"mtime":1609325946591,"results":"66","hashOfConfig":"40"},{"size":376,"mtime":1609325946592,"results":"67","hashOfConfig":"40"},{"size":1363,"mtime":1610706899612,"results":"68","hashOfConfig":"40"},{"size":772,"mtime":1610360564870,"results":"69","hashOfConfig":"40"},{"size":1839,"mtime":1610463640400,"results":"70","hashOfConfig":"40"},{"size":1718,"mtime":1609325946595,"results":"71","hashOfConfig":"40"},{"size":929,"mtime":1610710818655,"results":"72","hashOfConfig":"40"},{"size":920,"mtime":1610710818654,"results":"73","hashOfConfig":"40"},{"size":2994,"mtime":1610710818637,"results":"74","hashOfConfig":"40"},{"size":2510,"mtime":1610463640398,"results":"75","hashOfConfig":"40"},{"size":6418,"mtime":1610463640382,"results":"76","hashOfConfig":"40"},{"size":1738,"mtime":1610360564850,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1nzgn50",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\index.js",[],["165","166"],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\App.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\reportWebVitals.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\StandUpPage.js",["167"],"// React\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// CSS\r\nimport \"./StandUpPage.css\";\r\n\r\n// Material UI\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\n// Custom Componenets\r\nimport InstructionsPage from \"./01_Instructions/01_Instructions\";\r\nimport SetupPage from \"./02_Setup/02_Setup\";\r\nimport RandomizerAndTimer from \"./03_RandomizerAndTimer/03_RandomizerAndTimer\";\r\nimport MeetingFinished from \"./04_MeetingFinished/04_MeetingFinished\";\r\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\r\n\r\n// Auth0\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nexport default function StandUpPage() {\r\n  /*Steps*/\r\n  const [standUpStep, setStandUpStep] = useState(1);\r\n\r\n  /*Meeting Setup*/\r\n  const [minutesPerParticipant, setMinutesPerParticipant] = useState(1);\r\n  const [timeBetweenSpeakers, setTimeBetweenSpeakers] = useState(10);\r\n  const [participantToAdd, setParticipantToAdd] = useState(\"\");\r\n\r\n  /*Logged in user (if any)*/\r\n  const { user } = useAuth0();\r\n\r\n  // const dummyMeeting = {\r\n  //   userId: null,\r\n  //   type: \"standup\",\r\n  //   meetingParticipants: [\r\n  //     { name: \"Daniela\", hasHadTurn: true, timeLeft: 43, pauses: [] },\r\n  //     { name: \"Stefan\", hasHadTurn: true, timeLeft: -60, pauses: [] },\r\n  //     { name: \"Tommy\", hasHadTurn: true, timeLeft: 50, pauses: [] },\r\n  //     { name: \"Kawalpreet\", hasHadTurn: true, timeLeft: 20, pauses: [] },\r\n  //     { name: \"Jon\", hasHadTurn: false, timeLeft: 10, pauses: [] },\r\n  //   ],\r\n  //   meetingStartTime: 1610191221089,\r\n  //   meetingEndTime: 1610191229759,\r\n  //   meetingFinished: false,\r\n  // };\r\n\r\n  const blankMeeting = {\r\n    userId: null,\r\n    type: \"standup\",\r\n    meetingParticipants: [],\r\n    meetingStartTime: null,\r\n    meetingEndTime: null,\r\n    meetingFinished: false,\r\n  };\r\n\r\n  const [meeting, setMeeting] = useState({ ...blankMeeting });\r\n\r\n  /*Steps*/\r\n  const [totalMeetingTime, setTotalMeetingTime] = useState(0);\r\n\r\n  function deleteParticipant(i) {\r\n    if (i === undefined) {\r\n      console.error(\"No index passed to deleteParticipant\");\r\n      return;\r\n    }\r\n    const newState = { ...meeting };\r\n    newState.meetingParticipants.splice(i, 1);\r\n    setMeeting(newState);\r\n  }\r\n  // Add User ID if logged in\r\n  useEffect(() => {\r\n    if (user) {\r\n      setMeeting({ ...meeting, userId: user.sub });\r\n    }\r\n  }, [user]);\r\n\r\n  // Calculate meeting time\r\n  useEffect(() => {\r\n    function calculateMeetingTime() {\r\n      const people = meeting.meetingParticipants.length;\r\n      const speakingTimeInSeconds = people * minutesPerParticipant * 60;\r\n      const timeBetweenSpeakersInSeconds = people * timeBetweenSpeakers;\r\n      const totalTimeInMinutes = Math.round(\r\n        (speakingTimeInSeconds + timeBetweenSpeakersInSeconds) / 60\r\n      );\r\n      setTotalMeetingTime(totalTimeInMinutes);\r\n    }\r\n    if (standUpStep === 2) {\r\n      calculateMeetingTime();\r\n    }\r\n  }, [\r\n    standUpStep,\r\n    meeting.meetingParticipants.length,\r\n    minutesPerParticipant,\r\n    timeBetweenSpeakers,\r\n  ]);\r\n\r\n  // Check if meeting is finished\r\n  useEffect(() => {\r\n    if (meeting.meetingFinished === true) {\r\n      setStandUpStep(4);\r\n    }\r\n  }, [setStandUpStep, meeting.meetingFinished]);\r\n\r\n  function addParticipant(event) {\r\n    event.preventDefault();\r\n    if (participantToAdd === \"\") {\r\n      return;\r\n    }\r\n    const newState = { ...meeting };\r\n    newState.meetingParticipants.push({\r\n      name: participantToAdd,\r\n      hasHadTurn: false,\r\n      timeLeft: null,\r\n      pauses: [],\r\n    });\r\n    setParticipantToAdd(\"\");\r\n    setMeeting(newState);\r\n  }\r\n\r\n  // FIXME: Not working\r\n  // function shuffleParticipants() {\r\n  //   // Generate array of indices\r\n  //   const indices = meeting.meetingParticipants.map((el, i) => i);\r\n\r\n  //   //Fisher Yates algorithm - Shuffle Array\r\n  //   for (let i = indices.length; i > 0; i--) {\r\n  //     const j = Math.floor(Math.random() * (i + 1));\r\n  //     const temp = indices[i];\r\n  //     indices[i] = indices[j];\r\n  //     indices[j] = temp;\r\n  //   }\r\n\r\n  //   // Shuffle participants via shuffled indices\r\n  //   const shuffledParticipants = indices.map(\r\n  //     (el) => meeting.meetingParticipants[el]\r\n  //   );\r\n\r\n  //   console.log(indices);\r\n  //   console.log(shuffledParticipants);\r\n\r\n  //   setMeeting({ ...meeting, meetingParticipants: shuffledParticipants });\r\n  // }\r\n\r\n  function startMeeting() {\r\n    // Give each participant their time\r\n    const myArr = meeting.meetingParticipants.map((el) => {\r\n      el.timeLeft = minutesPerParticipant * 60;\r\n      return el;\r\n    });\r\n    setMeeting({ ...meeting, meetingParticipants: [...myArr] });\r\n\r\n    const newState = { ...meeting };\r\n    newState.meetingStartTime = Date.now();\r\n    setMeeting(newState);\r\n    setStandUpStep(3);\r\n  }\r\n\r\n  const steps = [\r\n    \"Review instructions\",\r\n    \"Pick settings, add participants\",\r\n    \"Run your StandUp\",\r\n    \"Finish!\",\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Collapse in={standUpStep === 1} timeout={800}>\r\n        <ProductTitle title=\"StandUp\">\r\n          <p className=\"stepsTitleText\">\r\n            Our formula for fast and engaging remote standups.\r\n          </p>\r\n        </ProductTitle>\r\n      </Collapse>\r\n\r\n      <Stepper activeStep={standUpStep - 1} style={{ background: \"none\" }}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n      {standUpStep === 1 ? (\r\n        <InstructionsPage nextButton={() => setStandUpStep(2)} />\r\n      ) : null}\r\n\r\n      {standUpStep === 2 ? (\r\n        <SetupPage\r\n          props={{\r\n            minutesPerParticipant,\r\n            setMinutesPerParticipant,\r\n            timeBetweenSpeakers,\r\n            setTimeBetweenSpeakers,\r\n            participantToAdd,\r\n            addParticipant,\r\n            deleteParticipant,\r\n            setParticipantToAdd,\r\n            meeting,\r\n            totalMeetingTime,\r\n            setStandUpStep,\r\n            startMeeting,\r\n            setMeeting,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {standUpStep === 3 ? (\r\n        <div>\r\n          <RandomizerAndTimer\r\n            props={{\r\n              meeting,\r\n              setMeeting,\r\n              speakerTime: minutesPerParticipant * 60,\r\n              timeBetweenSpeakers,\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {standUpStep === 4 ? (\r\n        <MeetingFinished\r\n          props={{\r\n            minutesPerParticipant,\r\n            meeting,\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\HomePage\\HomePage.js",["168","169","170"],"// React\r\nimport React from \"react\";\r\n\r\n// Material UI\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Custom Components\r\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\r\nimport PlatformLogo from \"./images/logo512.png\";\r\n\r\n// React Router\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// CSS\r\nimport \"./HomePage.css\";\r\n\r\nexport default function Index(props) {\r\n  return (\r\n    <div>\r\n      <section className=\"titleSection\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <img src={PlatformLogo} alt=\"Pow!Agile Logo\"></img>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <h1 className=\"homePageTitle\">Pow!Agile</h1>\r\n            <h2 className=\"homePageSubTitle\">\r\n              We help you run <em>smashing</em> remote agile ceremonies\r\n            </h2>\r\n            <p className=\"homePageSalesyText\">\r\n              We get it - facilitating remote agile ceremonies is hard! So our\r\n              team built two amazing tools to help you be more productive, and\r\n              gain useful insights on how to run your ceremonies better.\r\n              <br />\r\n              <br />\r\n              And the best part? You don't even need an account to get started.\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n\r\n      <Typography\r\n        className=\"getStartedText\"\r\n        variant=\"h5\"\r\n        element=\"p\"\r\n        display=\"block\"\r\n        gutterBottom\r\n      >\r\n        Get started using our free tools 👇\r\n      </Typography>\r\n\r\n      <section className=\"productButtonsSection\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <Link className=\"linkWrapper\" to=\"/rituals/standup\">\r\n              <Card elevation={3}>\r\n                <CardActionArea>\r\n                  <CardContent className=\"homeStandUpCard\">\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      style={{ fontSize: \"1.2em\" }}\r\n                    >\r\n                      <ProductTitle title=\"StandUp\" />\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                      Our formula for fast and engaging remote standups.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Link className=\"linkWrapper\" to=\"/rituals/retro\">\r\n              <Card elevation={3}>\r\n                <CardActionArea>\r\n                  <CardContent className=\"homeRetroCard\">\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      component=\"h2\"\r\n                      style={{ fontSize: \"1.2em\" }}\r\n                    >\r\n                      <ProductTitle title=\"Retrospective\" />\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"p\">\r\n                      Real time, collaborative, and engaging retros that make a\r\n                      positive impact on your team.\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n\r\n      {/* <section className=\"ourTeam\">\r\n        <div className=\"teamMate\">\r\n          <img src=\"\" alt=\"Daniela Leva - a developer on this project\"></img>\r\n          <h3>Daniela Leva</h3>\r\n          <h4>Back End, MongoDB, Mongoose</h4>\r\n          <a href=\"/\">LinkedIn</a>\r\n        </div>\r\n      </section> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\RetroPage.js",["171"],"// React\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Material UI\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\n// Customer Components\r\nimport ProductTitle from \"../../components/ProductTitle/ProductTitle\";\r\nimport InstructionsRetro from \"./01_Instructions/01_InstructionsRetro\";\r\nimport PickRole from \"./02_PickRole/02_PickRole\";\r\nimport SetupFacilitator from \"./03_Setup/03_SetupFacilitator\";\r\nimport SetupParticipant from \"./03_Setup/03_SetupParticipant\";\r\nimport MeetingInProgress from \"./04_MeetingInProgress/04_MeetingInProgress\";\r\nimport FinishedMeeting from \"./05_FinishedMeeting/05_FinishedMeeting\";\r\n\r\n// nanoid\r\nimport { nanoid } from \"nanoid\";\r\n\r\n// CSS\r\nimport \"./RetroPage.css\";\r\n\r\nfunction Retro() {\r\n  // Steps\r\n  const [retroStep, setRetroStep] = useState(1);\r\n  const steps = [\r\n    \"Review instructions\",\r\n    \"Select your role\",\r\n    \"Create / Join a Retrospective\",\r\n    \"Run your Retrospective\",\r\n    \"Finish!\",\r\n  ];\r\n  // Navigate through steps\r\n  function previousStep() {\r\n    setRetroStep(retroStep - 1);\r\n  }\r\n  function nextStep(role) {\r\n    setRetroStep(retroStep + 1);\r\n    if (!role) {\r\n      return;\r\n    } else if (role === \"facilitator\") {\r\n      setParticipant({ ...participant, isFacilitator: true });\r\n    } else if (role === \"participant\") {\r\n      setParticipant({ ...participant, isFacilitator: false });\r\n    }\r\n  }\r\n\r\n  // Blank Participant State\r\n  const blankParticipant = {\r\n    name: \"\",\r\n    isFacilitator: false,\r\n    meetingEmitted: false,\r\n    avatar: \"\",\r\n    votedOn: [],\r\n  };\r\n  const [participant, setParticipant] = useState({\r\n    ...blankParticipant,\r\n  });\r\n\r\n  // Blank Meeting State\r\n  const blankRetro = {\r\n    roomId: null,\r\n    title: `Retro meeting on ${new Date().toUTCString()}`,\r\n    type: \"retro\",\r\n    subtype: \"Four Ls (4Ls)\",\r\n    columns: [\"Liked\", \"Learned\", \"Lacked\", \"Longed For\"],\r\n    cards: [],\r\n    meetingStarted: false,\r\n    meetingFinished: false,\r\n    meetingStartTime: null,\r\n    meetingEndTime: null,\r\n  };\r\n  const [meeting, setMeeting] = useState({ ...blankRetro });\r\n\r\n  // Socket.io\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Check if this is an attempt to join\r\n  useEffect(() => {\r\n    function checkForJoin() {\r\n      if (meeting.meetingStarted === true || retroStep !== 1) {\r\n        return;\r\n      }\r\n      // Get URL params\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n\r\n      if (urlParams.get(\"roomId\") === null) {\r\n        console.log(\"No attempt to join detected...\");\r\n        return;\r\n      } else if (meeting.roomId === null) {\r\n        console.log(`Joining roomId ${urlParams.get(\"roomId\")}...`);\r\n        // Not a facilitator\r\n        setParticipant({ ...participant, isFacilitator: false });\r\n        // Set Meeting Room ID\r\n        setMeeting({ ...meeting, roomId: urlParams.get(\"roomId\") });\r\n        // Fast forward to Step 3\r\n        setRetroStep(3);\r\n      }\r\n    }\r\n\r\n    checkForJoin();\r\n  });\r\n\r\n  //// 👉 2 types of sources - local, and socket\r\n  ////// 👉  With local, we want to socket.emit the card\r\n  ////// 👉  With socket, we want to avoid that to prevent an infinite loop\r\n  function addCard({ card }) {\r\n    // Create card\r\n    const newCard = {\r\n      id: nanoid(),\r\n      addedBy: participant.name,\r\n      columnIndex: card.i,\r\n      content: \"\",\r\n      thumbsUp: 0,\r\n      thumbsDown: 0,\r\n      isDeleted: false,\r\n    };\r\n    // Emit from socket\r\n    if (socket) {\r\n      socket.emit(\"addCard\", newCard);\r\n    }\r\n  }\r\n\r\n  function deleteCard({ id }) {\r\n    // Emit from socket\r\n    if (socket) {\r\n      socket.emit(\"deleteCard\", id);\r\n    }\r\n  }\r\n\r\n  function updateCardText({ id, content }) {\r\n    // Emit from socket\r\n    if (socket) {\r\n      socket.emit(\"updateCardText\", { id, content });\r\n    }\r\n  }\r\n\r\n  function updateCardVotes({ id, thumb }) {\r\n    setParticipant({ ...participant, votedOn: [...participant.votedOn, id] });\r\n    if (socket) {\r\n      socket.emit(\"updateCardVotes\", { id, thumb });\r\n    }\r\n  }\r\n\r\n  function moveCard({ id, direction }) {\r\n    // Emit\r\n    if (socket) {\r\n      socket.emit(\"moveCard\", { id, direction });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Collapse in={retroStep === 1} timeout={800}>\r\n        <ProductTitle title=\"Retrospective\">\r\n          <p className=\"stepsTitleText\">\r\n            Real time, collaborative, and engaging retros that make a positive\r\n            impact on your team.\r\n          </p>\r\n        </ProductTitle>\r\n      </Collapse>\r\n\r\n      <Stepper activeStep={retroStep - 1} style={{ background: \"none\" }}>\r\n        {steps.map((label, index) => {\r\n          return (\r\n            <Step key={`RetroStep_${index}`}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n      {retroStep === 1 ? (\r\n        <InstructionsRetro props={{ nextButton: nextStep }} />\r\n      ) : null}\r\n\r\n      {retroStep === 2 ? <PickRole props={{ previousStep, nextStep }} /> : null}\r\n\r\n      {retroStep === 3 && participant.isFacilitator ? (\r\n        <SetupFacilitator\r\n          props={{\r\n            previousStep,\r\n            nextStep,\r\n            participant,\r\n            setParticipant,\r\n            meeting,\r\n            setMeeting,\r\n          }}\r\n        />\r\n      ) : retroStep === 3 && participant.isFacilitator === false ? (\r\n        <SetupParticipant\r\n          props={{\r\n            previousStep,\r\n            nextStep,\r\n            participant,\r\n            setParticipant,\r\n            meeting,\r\n            setMeeting,\r\n          }}\r\n        />\r\n      ) : null}\r\n\r\n      {retroStep === 4 ? (\r\n        <MeetingInProgress\r\n          props={{\r\n            meeting,\r\n            setMeeting,\r\n            addCard,\r\n            deleteCard,\r\n            updateCardText,\r\n            updateCardVotes,\r\n            moveCard,\r\n            participant,\r\n            setParticipant,\r\n            socket,\r\n            setSocket,\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Retro;\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\UserPage\\UserPage.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\horizontal-navs\\HorizontalNav4.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\02_Setup\\02_Setup.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\01_Instructions\\01_Instructions.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\03_RandomizerAndTimer\\03_RandomizerAndTimer.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\StandUpPage\\04_MeetingFinished\\04_MeetingFinished.js",["172"],"// React\r\nimport { useEffect } from \"react\";\r\n\r\n// CSS\r\nimport \"./04_MeetingFinished.css\";\r\n\r\n// npm module - Confetti\r\nimport Confetti from \"react-confetti\";\r\n\r\n// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Zoom } from \"@material-ui/core\";\r\nimport { Fade } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n// Material Icons\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\n// notistack\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n// Auth0\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n// Environment variables\r\nrequire(\"dotenv\").config();\r\nconst { REACT_APP_BACK_END_URL } = process.env;\r\n\r\nexport default function MeetingFinished({ props }) {\r\n  const { minutesPerParticipant, meeting } = props;\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const { user, isAuthenticated, loginWithRedirect } = useAuth0();\r\n  const congratulationsMessages = [\r\n    \"You smashed it! 💪\",\r\n    \"Agile rockstars! 🤘\",\r\n    \"Way to go! 🎉\",\r\n    \"Great job! 😍\",\r\n    \"Well done! 💃\",\r\n    \"Hip, hip, hurrah! 🙌\",\r\n    \"Nice one! 🥳\",\r\n    \"Oh yeah! 😎\",\r\n    \"Awesome! 😃\",\r\n    \"Great work, team! 😍\",\r\n    \"Nice job! 👍\",\r\n    \"Great work! 🎊\",\r\n  ];\r\n\r\n  const valuableStats = [\r\n    \"⌚ Fastest average day of the week\",\r\n    \"📆 Best time to schedule a StandUp\",\r\n    \"⏩ Longest ever StandUp meeting\",\r\n    \"🤏 Shortest ever StandUp meeting\",\r\n    \"👩‍👧 StandUp with the fewest participants\",\r\n    \"👨‍👨‍👧‍👧 StandUp with the most participants\",\r\n    \"🌍 Number of people running StandUps at the same time\",\r\n    \"⏯ Addicted to pausing the timer\",\r\n  ];\r\n\r\n  function pickRandom(array) {\r\n    const index = Math.floor(Math.random() * (array.length - 1));\r\n    return array[index];\r\n  }\r\n\r\n  useEffect(() => {\r\n    function postMeetingToDatabase() {\r\n      try {\r\n        fetch(`${REACT_APP_BACK_END_URL}/meeting`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(meeting),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) =>\r\n            enqueueSnackbar(\r\n              \"Your meeting was successfully saved to your account!\",\r\n              {\r\n                persist: false,\r\n                variant: \"success\",\r\n              }\r\n            )\r\n          );\r\n      } catch (err) {\r\n        console.error(err);\r\n        enqueueSnackbar(err, {\r\n          persist: false,\r\n          variant: \"error\",\r\n        });\r\n      }\r\n    }\r\n\r\n    if (user && isAuthenticated) {\r\n      postMeetingToDatabase();\r\n    }\r\n  });\r\n\r\n  console.log({ minutesPerParticipant, meeting });\r\n\r\n  function calculateTotalMeetingTime() {\r\n    const { meetingStartTime, meetingEndTime } = meeting;\r\n    const ms = meetingEndTime - meetingStartTime;\r\n\r\n    let seconds = Math.floor(ms / 1000);\r\n    let minutes = 0;\r\n\r\n    while (seconds > 59) {\r\n      seconds = seconds - 60;\r\n      minutes = minutes + 1;\r\n    }\r\n\r\n    let str = `${minutes < 10 ? \"0\" + minutes : minutes}:${\r\n      seconds < 10 ? \"0\" + seconds : seconds\r\n    }`;\r\n\r\n    return str.match(/(\\d\\d:\\d\\d)/g) && str !== \"00:00\" ? str : \"Too quick!\";\r\n  }\r\n\r\n  function findFastest() {\r\n    let arr = meeting.meetingParticipants;\r\n\r\n    const fastest = arr.reduce((acc, cur) => {\r\n      return cur.timeLeft > acc.timeLeft ? cur : acc;\r\n    });\r\n\r\n    return fastest.name;\r\n  }\r\n\r\n  function findSlowest() {\r\n    let arr = meeting.meetingParticipants;\r\n\r\n    const slowest = arr.reduce((acc, cur) => {\r\n      return cur.timeLeft < acc.timeLeft ? cur : acc;\r\n    });\r\n\r\n    return slowest.name;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Confetti numberOfPieces={150} recycle={true} />\r\n      <section className=\"finishedTitleArea\">\r\n        <h3 className=\"meetingFinishedTitle\">\r\n          {pickRandom(congratulationsMessages)}\r\n        </h3>\r\n        <h4 className=\"meetingFinishedSubtitle\">You finished your stand up</h4>\r\n      </section>\r\n      <br />\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Zoom in={true} timeout={1000}>\r\n            <Card className=\"statCard\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  ⌚ Total meeting time\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {calculateTotalMeetingTime()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Zoom>\r\n        </Grid>\r\n\r\n        <Grid item xs>\r\n          <Zoom in={true} timeout={1500}>\r\n            <Card className=\"statCard\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  ⚡ Life in the fast lane\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {findFastest()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Zoom>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Zoom in={true} timeout={2000}>\r\n            <Card className=\"statCard\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  ☕ Could use a coffee\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {findSlowest()}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Zoom>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n\r\n      {user && isAuthenticated ? (\r\n        <div>\r\n          <Alert severity=\"success\">\r\n            Did you know? You can view detailed stats about your meetings in\r\n            your account page.\r\n          </Alert>\r\n        </div>\r\n      ) : (\r\n        <div className=\"lockedStats\">\r\n          <Fade in={true} timeout={2500}>\r\n            <div className=\"marketingMessage\">\r\n              <LockIcon fontSize=\"large\" />\r\n              <p className=\"salesyTitle\">Unlock even more valuable stats</p>\r\n              <p className=\"salesySubtitle\">\r\n                {\" \"}\r\n                run better, faster, more productive meetings\r\n              </p>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={() => loginWithRedirect()}\r\n              >\r\n                Sign Up for free &rarr;\r\n              </Button>\r\n            </div>\r\n          </Fade>\r\n\r\n          <div className=\"blurryStats\">\r\n            <Grid container spacing={3}>\r\n              {valuableStats.map((el, i) => (\r\n                <Zoom in={true} timeout={1200 * (i + 1)}>\r\n                  <Grid item xs={6} sm={3}>\r\n                    <Card className=\"statCard\">\r\n                      <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                          {el}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                          ???\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Zoom>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\ProductTitle\\ProductTitle.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\features\\Features4.js",[],["173","174"],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\team\\Team2.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\gallery\\Gallery2.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\footers\\Footer3.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\UserDashboard\\UserDashboard.js",["175","176","177","178","179"],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\01_Instructions\\01_InstructionsRetro.js",["180"],"// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\n// CSS\r\nimport \"./01_InstructionsRetro.css\";\r\n\r\nexport default function InstructionsRetro({ props }) {\r\n  const { nextButton } = props;\r\n\r\n  const retroInfo = [\r\n    {\r\n      title: `What is a Retrospective?`,\r\n      text: `A Retrospective is a ceremony held at the end of each iteration in an agile project. The general purpose is to allow the team, as a group, to evaluate its past working cycle. In addition, it’s an important moment to gather feedback on what went well and what did not. Finally, retrospective is a moment for the team to define actions that may fix or improve things identified as negative.`,\r\n    },\r\n    {\r\n      title: `How long does a Retrospective last?`,\r\n      text: `Sprint retrospective should take between 60 to 90 minutes for a two-week sprint and likely a bit longer (however, probably not proportionally longer) when doing longer sprints. \r\n      Daily Retrospective should last between 10 - 15 minutes depending on the type of retro selected`,\r\n    },\r\n    {\r\n      title: `What questions are asked in a Retrospective?`,\r\n      text: `The three common questions asked are, \"What went well? What didnt go so well? What can we improve?\" However there are many great retrospective ideas out in the Agile community, including variations and additions on the basic questions and creative facilitation techniques. We have a varied selection for you to choose from`,\r\n    },\r\n    {\r\n      title: `What are the benefits of a Retrospective?`,\r\n      text: `The most important benefit is that it cuts through hierarchy and gives equal power to the team members to open up and present their views effectively.\r\n      Retrospectives provide platform to celebrate success and ponder upon failures. Team members can deliberate upon the course of improvements to be included in the next sprint. Retrospective encourages participation, sharing of interests and views, taking the team towards an amicable solution. End of a retrospective let’s the team to start the next sprint with a clean slate.`,\r\n      text: `Identify how to improve teamwork by reflecting on what worked, what didn’t, and why. We recommend running a Retrospective with your team every couple of weeks or at the end of a project milestone.`,\r\n    },\r\n    {\r\n      title: `How to prepare a Retrospective`,\r\n      text: `Start the retrospective by creating a new session. Give it a suggestive title and choose between different types of Retro you would like to run.`,\r\n    },\r\n    {\r\n      title: `Setting the stage`,\r\n      text: `Let your team know the following at the start of the meeting: \r\n      The reason you’re taking the time to talk about how we have worked is to see how we can make improvements. \r\n      We’re coming into this meeting understanding that everyone did the best that they could given their knowledge and tools. \r\n      This meeting is a safe space. Nothing that is shared will be used against anyone. \r\n      We’re here to explore, not to blame.`,\r\n    },\r\n    {\r\n      title: `Key moments`,\r\n      text: `Have the team think back over the chosen time period. What were the key events that occured? Provide a few examples, such as goals met, team celebrations, team members joining, company events. \r\n      Anchoring the team in key milestones jogs the team’s memory of events that occurred and how they felt about them.`,\r\n    },\r\n    {\r\n      title: `What we did well?`,\r\n      text: `Depending on the type pf Retro you will run. explain to the team the meaning of all columns.\r\n      Using our tool, have each team member write down by adding a new card what the team did well, one idea per note. Delete similar or duplicate ideas. Discuss each one briefly as a team.`,\r\n    },\r\n    {\r\n      title: `What we can do better?`,\r\n      text: `Have everyone write down what they think can be improved, one idea per card. Delete similar or duplicate ideas. Discuss each one briefly as a team.`,\r\n    },\r\n    {\r\n      title: `Share your action plan`,\r\n      text: `Have everyone brainstorm actions that can be taken to improve problem areas, one idea per card. Each person will have a few minutes to share their plan. Use the actions list to capture each action. Make sure to include who will do it, what they are doing, and by when.`,\r\n    },\r\n    {\r\n      title: `Wrap up`,\r\n      text: `Commit to when you’ll track progress on actions on a regular basis, such as at team meetings or at the next Retro.`,\r\n    },\r\n  ];\r\n  return (\r\n    <section className=\"getStartedPage\">\r\n      <div className=\"stepsWrapper\">\r\n        {retroInfo.map((el, i) => (\r\n          <Accordion key={`RetroInstruction_${i}`}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography style={{ fontWeight: \"500\" }}>{el.title}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>{el.text}</Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        ))}\r\n      </div>\r\n\r\n      <p>Once you've reviewed the instructions, start your retro:</p>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onClick={nextButton}\r\n      >\r\n        Get Started &rarr;\r\n      </Button>\r\n    </section>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\02_PickRole\\02_PickRole.js",["181"],"// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\n// Auth0\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nexport default function PickRole({ props }) {\r\n  const { previousStep = null, nextStep = null } = props;\r\n  const { user, isAuthenticated } = useAuth0();\r\n  return isAuthenticated ? (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Pick your role</h3>\r\n\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className=\"Btn\"\r\n        onClick={() => nextStep(\"facilitator\")}\r\n      >\r\n        Facilitator\r\n      </Button>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className=\"Btn\"\r\n        onClick={() => nextStep(\"participant\")}\r\n      >\r\n        Participant\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <button onClick={previousStep}>&larr; Back</button>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Pick your role</h3>\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className=\"Btn\"\r\n        onClick={() => nextStep(\"participant\")}\r\n      >\r\n        Participant\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <button onClick={previousStep}>&larr; Back</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\03_Setup\\03_SetupFacilitator.js",["182","183"],"// React\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\n// Retro Types Icons\r\nimport Looks4Icon from \"@material-ui/icons/Looks4\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport TrafficIcon from \"@material-ui/icons/Traffic\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\n// Nano id\r\nimport { nanoid } from \"nanoid\";\r\n\r\n// Auth0\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n// Environment variables\r\nrequire(\"dotenv\").config();\r\nconst { REACT_APP_FRONT_END_URL } = process.env;\r\n\r\nexport default function SetupFacilitator({ props }) {\r\n  const {\r\n    previousStep,\r\n    nextStep,\r\n    participant,\r\n    setParticipant,\r\n    meeting,\r\n    setMeeting,\r\n  } = props;\r\n\r\n  // TODO: Autofill field\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  const [pickedRetro, setPickedRetro] = useState(0);\r\n\r\n  function changeRetro(e) {\r\n    const { name, columns, icon } = retroColumns[e.target.value];\r\n\r\n    setPickedRetro(e.target.value);\r\n\r\n    setMeeting({\r\n      ...meeting,\r\n      subtype: name,\r\n      columns: columns,\r\n      icon: icon,\r\n    });\r\n  }\r\n\r\n  const retroColumns = [\r\n    {\r\n      name: \"Four Ls (4Ls)\",\r\n      columns: [\"Liked\", \"Learned\", \"Lacked\", \"Longed For\"],\r\n      icon: <Looks4Icon />,\r\n    },\r\n    {\r\n      name: \"Starfish (Small)\",\r\n      columns: [\"Keep\", \"More Of\", \"Less Of / Stop\"],\r\n      icon: <StarRateIcon />,\r\n    },\r\n    {\r\n      name: \"Starfish (Large)\",\r\n      columns: [\r\n        \"Keep Doing\",\r\n        \"More Of\",\r\n        \"Start Doing\",\r\n        \"Stop Doing\",\r\n        \"Less Of\",\r\n      ],\r\n      icon: <StarIcon />,\r\n    },\r\n    {\r\n      name: \"Start, Stop, Continue\",\r\n      columns: [\"Start\", \"Stop\", \"Continue\"],\r\n      icon: <TrafficIcon />,\r\n    },\r\n    {\r\n      name: \"Mad, Sad, Glad\",\r\n      columns: [\"Mad\", \"Sad\", \"Glad\"],\r\n      icon: <EmojiEmotionsIcon />,\r\n    },\r\n    {\r\n      name: \"One Word Retro\",\r\n      columns: [\"Your Thoughts In One Word\"],\r\n      icon: <ChatBubbleIcon />,\r\n    },\r\n    {\r\n      name: \"KALM Retro\",\r\n      columns: [\"Keep\", \"Add\", \"More\", \"Less\"],\r\n      icon: <AssignmentIcon />,\r\n    },\r\n  ];\r\n\r\n  const styleObj = { width: 700 };\r\n\r\n  // Set Meeting Room ID\r\n  useEffect(() => {\r\n    if (meeting.roomId === null) {\r\n      setMeeting({ ...meeting, roomId: nanoid() });\r\n    }\r\n    console.info(`Meeting room id set to ${meeting.roomId}`);\r\n  });\r\n\r\n  // Add avatar URL, if any\r\n  useEffect(() => {\r\n    if (user && user.picture && !isLoading) {\r\n      setParticipant({ ...participant, avatar: user.picture });\r\n    }\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Facilitate a Retrospective</h2>\r\n      <p>Your name * (should autofill if logged in)</p>\r\n      <input\r\n        onChange={(e) =>\r\n          setParticipant({ ...participant, name: e.target.value })\r\n        }\r\n      ></input>\r\n      <p>Give your meeting a descriptive title *</p>\r\n      <input\r\n        onChange={(e) => setMeeting({ ...meeting, title: e.target.value })}\r\n      ></input>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <FormControl variant=\"outlined\" style={styleObj} required>\r\n        <InputLabel>Pick your retrospective</InputLabel>\r\n        <Select\r\n          value={pickedRetro}\r\n          onChange={(e) => changeRetro(e)}\r\n          label=\"Pick your retrospective\"\r\n        >\r\n          {retroColumns.map((el, i) => (\r\n            <MenuItem value={i}>\r\n              {el.icon}&nbsp;{el.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <p>Your unique link - send this to your participants</p>\r\n      <FormControl variant=\"filled\" style={styleObj}>\r\n        <InputLabel htmlFor=\"generated-meeting-url\">\r\n          Meeting Room Link\r\n        </InputLabel>\r\n        <FilledInput\r\n          readOnly\r\n          id=\"generated-meeting-url\"\r\n          value={`${REACT_APP_FRONT_END_URL}/rituals/retro?roomId=${meeting.roomId}`}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"copy link\"\r\n                onClick={() => console.log(\"Copy link\")}\r\n                edge=\"end\"\r\n              >\r\n                <Button>\r\n                  Copy &nbsp; <FileCopyIcon />\r\n                </Button>\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <p>or</p>\r\n      <FormControl variant=\"filled\" style={styleObj}>\r\n        <InputLabel htmlFor=\"generated-meeting-id\">Room ID</InputLabel>\r\n        <FilledInput\r\n          readOnly\r\n          id=\"generated-meeting-id\"\r\n          value={meeting.roomId}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                disableRipple\r\n                disableFocusRipple\r\n                aria-label=\"copy link\"\r\n                onClick={() => console.log(\"Copy link\")}\r\n                edge=\"end\"\r\n              >\r\n                <Button>\r\n                  Copy &nbsp; <FileCopyIcon />\r\n                </Button>\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <button onClick={previousStep}>&larr; Back</button>\r\n      <button onClick={nextStep}>Start session &rarr;</button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\03_Setup\\03_SetupParticipant.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\04_MeetingInProgress.js",["184"],"// React\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Custom componenets\r\nimport RetroColumn from \"./RetroColumn/RetroColumn\";\r\n\r\n// Socket.io Client\r\nimport { io } from \"socket.io-client\";\r\n\r\n// Environment variables\r\nrequire(\"dotenv\").config();\r\nconst { REACT_APP_BACK_END_URL } = process.env;\r\n\r\nexport default function MeetingInProgress({ props }) {\r\n  const {\r\n    meeting,\r\n    setMeeting,\r\n    addCard,\r\n    deleteCard,\r\n    updateCardText,\r\n    updateCardVotes,\r\n    moveCard,\r\n    participant,\r\n    setParticipant,\r\n    socket,\r\n    setSocket,\r\n  } = props;\r\n\r\n  // Start the meeting\r\n  useEffect(() => {\r\n    if (!meeting.meetingStarted) {\r\n      setMeeting({ ...meeting, meetingStarted: true });\r\n    }\r\n  });\r\n\r\n  // Establish socket.io connection and rules (send/receive)\r\n  const [rulesEstablished, setRulesEstablished] = useState(false);\r\n  useEffect(() => {\r\n    // Establish socket connection\r\n    if (!socket) {\r\n      // Destructure relevant info for connection\r\n      const { roomId } = meeting;\r\n      const { name, isFacilitator, avatar } = participant;\r\n\r\n      setSocket(\r\n        io(`${REACT_APP_BACK_END_URL}`, {\r\n          query: {\r\n            roomId,\r\n            name,\r\n            isFacilitator,\r\n            avatar,\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    //// 👉 2 types of sources - local, and socket\r\n    ////// 👉  With socket, we only render, but don't emit the card, to avoid an infinite loop\r\n    ////// 👉  With local, we render AND emit the card, to send it to other participants\r\n    if (socket) {\r\n      if (!rulesEstablished) {\r\n        const source = \"socket\";\r\n\r\n        // 📲 Notification rules\r\n        socket.on(\"notification\", (notification) => {\r\n          // FIXME: Do stuff......\r\n          console.log(notification);\r\n        });\r\n\r\n        //// 📥 \"Receive\" rules\r\n        // Update Meeting State\r\n        socket.on(\"updateMeeting\", (meeting) => {\r\n          setMeeting(meeting);\r\n        });\r\n        // // Add\r\n        // socket.on(\"addCard\", (card) => {\r\n        //   addCard({ source, card });\r\n        // });\r\n\r\n        // // Delete\r\n        // socket.on(\"deleteCard\", (id) => {\r\n        //   deleteCard({ source, id });\r\n        // });\r\n\r\n        // // Update Text\r\n        // socket.on(\"updateCardText\", ({ id, content }) => {\r\n        //   updateCardText({ source, id, content });\r\n        // });\r\n\r\n        // // Update Votes\r\n        // socket.on(\"updateCardVotes\", ({ id, thumb }) => {\r\n        //   updateCardVotes({ source, id, thumb });\r\n        // });\r\n\r\n        // // Move card\r\n        // socket.on(\"moveCard\", ({ id, direction }) => {\r\n        //   moveCard({ source, id, direction });\r\n        // });\r\n\r\n        setRulesEstablished(true);\r\n      }\r\n    }\r\n\r\n    // Emit initial meeting state\r\n    if (socket && !participant.meetingEmitted) {\r\n      alert(\"Imma emmit...\");\r\n      socket.emit(\"startMeeting\", meeting);\r\n      setParticipant({ ...participant, meetingEmitted: true });\r\n    }\r\n  }, [\r\n    addCard,\r\n    deleteCard,\r\n    meeting,\r\n    moveCard,\r\n    participant,\r\n    rulesEstablished,\r\n    setMeeting,\r\n    setParticipant,\r\n    setSocket,\r\n    socket,\r\n    updateCardText,\r\n    updateCardVotes,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      {/* TODO: Need some logic here, where the server determines the time of the meeting*/}\r\n      {/* <TimerPartyParrotHorizontal\r\n          props={{\r\n            totalTime: 600,\r\n            timeLeft: 600,\r\n          }}\r\n        /> */}\r\n      <div>\r\n        <Grid\r\n          className=\"retroBoardContainer\"\r\n          container\r\n          spacing={2}\r\n          wrap=\"nowrap\"\r\n        >\r\n          {meeting.columns.map((columnTitle, index) => (\r\n            <RetroColumn\r\n              key={`${columnTitle}_card${index}`}\r\n              props={{\r\n                meeting,\r\n                setMeeting,\r\n                columnTitle,\r\n                index,\r\n                addCard,\r\n                updateCardText,\r\n                updateCardVotes,\r\n                deleteCard,\r\n                moveCard,\r\n                cards: meeting.cards.filter((card) =>\r\n                  card.columnIndex === index && !card.isDeleted ? true : false\r\n                ),\r\n                participant,\r\n              }}\r\n            ></RetroColumn>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\05_FinishedMeeting\\05_FinishedMeeting.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\StatsGraph\\StatsGraph.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingStats\\MeetingStats.js",["185","186","187"],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\Login\\LogInButton\\LogInButton.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\Login\\LogOutButton\\LogOutButton.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingStats\\Acordion.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TextField\\Text.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\RetroColumn\\RetroColumn.js",["188"],"// Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\n// CSS\r\nimport \"./RetroColumn.css\";\r\n\r\n// Custom Components\r\nimport RetroCard from \"../RetroCard/RetroCard\";\r\n\r\n// shortid\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function RetroColumn({ props = {} }) {\r\n  const {\r\n    meeting,\r\n    columnTitle = \"Column Title\",\r\n    index,\r\n    cards,\r\n    addCard,\r\n    updateCardText,\r\n    updateCardVotes,\r\n    deleteCard,\r\n    moveCard,\r\n    participant,\r\n  } = props;\r\n\r\n  return (\r\n    <Grid item key={\"column\" + index}>\r\n      <Collapse in>\r\n        <Paper className=\"columnWrapper\">\r\n          <h3 className=\"columnTitle\">{columnTitle}</h3>\r\n          {cards.length > 0 ? (\r\n            cards\r\n              .sort(\r\n                (card1, card2) =>\r\n                  card2.thumbsUp -\r\n                  card2.thumbsDown -\r\n                  (card1.thumbsUp - card1.thumbsDown)\r\n              )\r\n              .map((card, index) => (\r\n                <RetroCard\r\n                  key={`${columnTitle}_${card}_${index}`}\r\n                  props={{ card, index, meeting, participant }}\r\n                  functions={{\r\n                    updateCardText,\r\n                    updateCardVotes,\r\n                    deleteCard,\r\n                    moveCard,\r\n                  }}\r\n                />\r\n              ))\r\n          ) : (\r\n            <p className=\"columnHelperText\">This column has no cards</p>\r\n          )}\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={() => addCard({ source: \"local\", card: { i: index } })}\r\n          >\r\n            Add Card +\r\n          </Button>\r\n        </Paper>\r\n      </Collapse>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\MeetingParticipants\\ParticipantCard\\ParticipantCard.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TotalStandups\\TotalStandups.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TotalRetros\\TotalRetros.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\FastestMeeting\\FastestMeeting.js",["189"],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\pages\\RetroPage\\04_MeetingInProgress\\RetroCard\\RetroCard.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\TimerPartyParrot\\TimerPartyParrot.js",[],"C:\\Users\\tommy\\iCloudDrive\\School of Code\\Final Project\\front-end-final-project-powershell-rangers\\src\\components\\RandomizerCard\\RandomizerCard.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":78,"column":6,"nodeType":"196","endLine":78,"endColumn":12,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":13},{"ruleId":"198","severity":1,"message":"202","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":19},{"ruleId":"198","severity":1,"message":"203","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":23},{"ruleId":"198","severity":1,"message":"205","line":35,"column":28,"nodeType":"200","messageId":"201","endLine":35,"endColumn":41},{"ruleId":"190","replacedBy":"206"},{"ruleId":"192","replacedBy":"207"},{"ruleId":"198","severity":1,"message":"208","line":2,"column":17,"nodeType":"200","messageId":"201","endLine":2,"endColumn":26},{"ruleId":"198","severity":1,"message":"209","line":2,"column":28,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"210","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":11},{"ruleId":"198","severity":1,"message":"211","line":17,"column":8,"nodeType":"200","messageId":"201","endLine":17,"endColumn":22},{"ruleId":"198","severity":1,"message":"212","line":22,"column":17,"nodeType":"200","messageId":"201","endLine":22,"endColumn":32},{"ruleId":"213","severity":1,"message":"214","line":33,"column":7,"nodeType":"215","messageId":"216","endLine":33,"endColumn":11},{"ruleId":"198","severity":1,"message":"217","line":8,"column":11,"nodeType":"200","messageId":"201","endLine":8,"endColumn":15},{"ruleId":"198","severity":1,"message":"212","line":46,"column":17,"nodeType":"200","messageId":"201","endLine":46,"endColumn":32},{"ruleId":"194","severity":1,"message":"218","line":122,"column":6,"nodeType":"196","endLine":122,"endColumn":17,"suggestions":"219"},{"ruleId":"198","severity":1,"message":"220","line":65,"column":15,"nodeType":"200","messageId":"201","endLine":65,"endColumn":21},{"ruleId":"198","severity":1,"message":"208","line":2,"column":27,"nodeType":"200","messageId":"201","endLine":2,"endColumn":36},{"ruleId":"198","severity":1,"message":"221","line":10,"column":10,"nodeType":"200","messageId":"201","endLine":10,"endColumn":20},{"ruleId":"198","severity":1,"message":"222","line":22,"column":11,"nodeType":"200","messageId":"201","endLine":22,"endColumn":36},{"ruleId":"198","severity":1,"message":"223","line":14,"column":10,"nodeType":"200","messageId":"201","endLine":14,"endColumn":16},{"ruleId":"198","severity":1,"message":"224","line":92,"column":9,"nodeType":"200","messageId":"201","endLine":92,"endColumn":22},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'meeting'. Either include it or remove the dependency array. You can also do a functional update 'setMeeting(m => ...)' if you only need 'meeting' in the 'setMeeting' call.","ArrayExpression",["227"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Button' is defined but never used.","'FinishedMeeting' is defined but never used.","'closeSnackbar' is assigned a value but never used.",["225"],["226"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'FastestMeeting' is defined but never used.","'isAuthenticated' is assigned a value but never used.","no-dupe-keys","Duplicate key 'text'.","ObjectExpression","unexpected","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'participant', 'setParticipant', and 'user'. Either include them or remove the dependency array.",["228"],"'source' is assigned a value but never used.","'Typography' is defined but never used.","'calculateTotalMeetingTime' is assigned a value but never used.","'nanoid' is defined but never used.","'dayOfQuickest' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [meeting, user]",{"range":"233","text":"234"},"Update the dependencies array to be: [isLoading, participant, setParticipant, user]",{"range":"235","text":"236"},[2494,2500],"[meeting, user]",[3276,3287],"[isLoading, participant, setParticipant, user]"]